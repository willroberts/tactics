use 'godoc cmd/github.com/willroberts/tactics/engine' for documentation on the github.com/willroberts/tactics/engine command 

PACKAGE DOCUMENTATION

package engine
    import "github.com/willroberts/tactics/engine"

    Package engine contains bindings to SDL for rendering graphics. Support
    for audio, input, and networking will be added as needed. Integration
    with OpenGL contexts may also be added for 3D rendering.

TYPES

type Camera interface {
    MoveTo(int32, int32)
    Position() (int32, int32)
}

func NewCamera() Camera

type SDLEngine interface {
    Window() *sdl.Window
    Surface() *sdl.Surface
    Renderer() *sdl.Renderer
    Camera() Camera

    ProcessTextures(Spritesheet) error

    CameraShift(*sdl.Rect) *sdl.Rect
    CameraShiftVector([]int16, []int16) ([]int16, []int16)

    ClearScreen() error
    FillWindow(uint32) error
    DrawRect(*sdl.Rect, uint32) error
    DrawIsometricRect(*sdl.Rect, uint32) error
    DrawLabel(string, *sdl.Rect, *ttf.Font) error
    DrawTexture(*sdl.Texture) error
    UpdateSurface() error

    Events() []sdl.Event

    PauseRendering(uint32)
    DestroyWindow()
}
    SDLEngine is our interface to SDL2.

func NewSDLEngine(title string, width int, height int) (SDLEngine, error)
    NewSDLEngine creates an SDL window, surface, and renderer with the given
    properties. Implements and returns the SDLEngine interface.

type Scene interface {
    Setup() error
    Main() error
    Teardown() error
}
    Scene is a generic interface for types which interact with SDLEngine.
    They may resize the game window, make draw calls, interact with the
    event loop, and more.

type Spritesheet interface {
    Image() image.Image

    Width() int
    Height() int
    SpriteWidth() int
    SpriteHeight() int

    Sprites() []image.Image
    AddSprite(image.Image)

    LoadImage(string) error
    PopulateDimensions(string) error
    PopulateSprites()

    Textures() []*sdl.Texture
    CreateTexture(image.Image, *sdl.Renderer) (*sdl.Texture, error)
    AddTexture(*sdl.Texture)
    DestroyTextures()
}
    Spritesheet is the interface for an image containing a grid of smaller
    images. Its interface allows us to carve up the image, and convert each
    one into an SDL texture.

SUBDIRECTORIES

	input
	menu

